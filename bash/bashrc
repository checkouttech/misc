# Let there be color in grep!
export GREP_OPTIONS=' --color=auto'
# Set Vim as my default editor
export EDITOR=vim
# set ls color 
alias ls="ls --color=auto"




## Colorize the ls output ##
# for mac
alias ls='ls -G'
# for unix 
#alias ls='ls --color=auto'
## Use a long listing format ##
#alias ll='ls -la'
## Show hidden files ##
##alias l.='ls -d .* --color=auto'


export JAVA_8_HOME=$(/usr/libexec/java_home -v8)
export JAVA_11_HOME=$(/usr/libexec/java_home -v11)

alias java8='export JAVA_HOME=$JAVA_8_HOME'
alias java11='export JAVA_HOME=$JAVA_11_HOME'



# 
# [[ :$PATH: == *:$HOME/bin:* ]] || PATH=$HOME/bin:$PATH
# export PATH="$PATH:$HOME/Library/Python/3.9/bin"




# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}


# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}


MAGENTA="\[\e[0;35m\]"
LIGHT_MAGENTA="\[\e[1;35m\]"
YELLOW="\[\e[0;33m\]"
BOLD_ITALICS_YELLOW="\[\e[1;3;33m\]"



RED="\[\033[31;1m\]"
CYAN="\[\e[01;36m\]"
WHITE="\[\e[01;37m\]"
BLUE="\[\e[01;34m\]"
COLOR_RESET="\[\e[00m\]"   
TIME="\t"
CURRENT_PATH="\W"
ROOT_OR_NOT="\$"
GREEN="\[\e[0;32m\]"
BOLD_ITALICS_PURPLE="\[\e[1;3;35m\]"
#BOLD_YELLOW="\[\e[0;103m\]"
#BOLD_HIGH_INTENSITY_PURPLE="\[\e[0;95m\]"
BOLD_BLUE="\[\e[1;34m\]"

LOCATION='`pwd | sed "s#\(/[^/]\{1,\}/[^/]\{1,\}/[^/]\{1,\}/\).*\(/[^/]\{1,\}/[^/]\{1,\}\)/\{0,1\}#\1__\2#g"`'



parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

parse_git_dirty () {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working tree clean" ]] && echo "🐼 "
}



#export PS1="[${COLOR_RESET} ${LIGHT_MAGENTA} ${LOCATION} ${BOLD_ITALICS_YELLOW} \$(parse_git_branch) ${COLOR_RESET}] \$ "
export PS1="[${COLOR_RESET} ${MAGENTA} ${LOCATION} ${YELLOW} \$(parse_git_branch) ${COLOR_RESET}] \$ "

# export PS1="[\[\033[36m\]\$(~/.rvm/bin/rvm-prompt i v)\[\033[35m\]\$(~/.rvm/bin/rvm-prompt g)\[\033[00m\]] \u@\w\[\033[36m\] ~>\$(parse_git_branch)\[\033[33m\]\$(parse_git_dirty)\[\033[00m\]\$ "



#export PROMPT='%F{grey}%n%f %F{cyan}%~%f %F{green}$(parse_git_branch)%f %F{normal}$%f '
#
#
#export PS1="${CYAN}[${BLUE}${TIME}${WHITE} ${CURRENT_PATH}${CYAN}]${ROOT_OR_NOT}${TEXT_RESET} "

#export PS1="[${COLOR_RESET} ${GREEN} ${LOCATION} ${COLOR_RESET}] \$ "


#export PS1="\u@\h:\W \$(git branch)\$ "






#function parse_git_dirty {
#  [[ $(git status --porcelain 2> /dev/null) ]] && echo "*"
#}
#function parse_git_branch {
#  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/ (\1$(parse_git_dirty))/"
#}


#function parse_git_branch() {
#git branch 2> /dev/null | sed -n -e 's/^* (.*)/[\1]/p'
#}


